services:
  dotnet-demo:
    image: ${DOCKER_REGISTRY-}dotnet-demo
    build:
      context: .
      dockerfile: src/Web/Dockerfile
      target: final
      platforms:
        - linux/amd64
      args:
        - BUILD_CONFIGURATION=Release
    platform: linux/amd64
    ports:
      - 3000:3000
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=3000
      - ConnectionStrings__mongodb=${MONGODB_CONNECTION_STRING}
    depends_on:
      - mongo
    restart: always
    networks:
      - frontend
      - backend

  mongo:
    image: mongo:latest
    ports:
      - 27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ADMIN_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ADMIN_PASSWORD}
    volumes:
      - mongo-data:/data/db
    restart: always
    networks:
      - backend

  mongo-express:
    image: mongo-express:latest
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_ADMIN_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_ADMIN_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongo
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - backend

volumes:
  mongo-data:
    driver: local

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
